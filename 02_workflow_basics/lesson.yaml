- Class: meta
  Course: swirl-rfordatascience
  Lesson: workflow_basics
  Author: Victor Hugo Avila Felipe
  Type: Standard
  Organization: Instituto de Física
  Version: 2.4.3
  
  
  
- Class: text
  Output: Veremos el Flujo de Trabajo que es recomendable seguir dentro de Rstudio.

- Class: cmd_question
  Output: R se puede utilizar como calculadora. Ejecuta;  2 + 2
  CorrectAnswer: 2 + 2
  AnswerTests: omnitest(correctExpr='2 + 2')
  Hint: Ejecuta; 2 + 2

- Class: cmd_question
  Output: Multiples operaciones con Jerarquia Matematica. Ejecuta; (59 + 73 + 2) / 3
  CorrectAnswer: (59 + 73 + 2) / 3
  AnswerTests: omnitest(correctExpr='(59 + 73 + 2) / 3')
  Hint: Ejecuta; (59 + 73 + 2) / 3


- Class: text
  Output: ¡Muy bien! Como puedes ver, R es muy fácil de usar con expresiones matemáticas simples y complejas, las opciones que tienes de operaciones abarcan las sumas, restas, multiplicaciones, divisiones, e incluso la posibilidad de agrupar las operaciones con ()

- Class: text
  Output: Támbien existen las funciones matemáticas seno, coseno, logaritmo, exponencial y se pueden anidar unas a otras.

- Class: mult_question
  Output: Ejecuta; log(1) (De igual forma puedes prbar usar exp(0), cos(0), sen(0))
  AnswerChoices: sin(0);cos(0);log(1);exp(1);log(exp(1))
  CorrectAnswer: log(1)
  AnswerTests: omnitest(correctVal='log(1)')
  Hint: Ejecuta; log(1)

- Class: cmd_question
  Output: Ahora que ya sabes que se pueden llevar a cabo operaciones, tambien debes saber que puedes asignar valores a objetos, asigna el valor 10 a x con la expresión x <- 10
  CorrectAnswer: x <- 10
  AnswerTests: omnitest(correctExpr='x <- 10')
  Hint: Ejecuta; x <- 10

- Class: text
  Output: Para llevar a cabo la asinganción de valores basta con que sigas esta nomenclatura":" nombre_del_objeto <- valor_u_operacion 

- Class: text
  Output: EN R, se usa la convención snake_case para asignar nombres a los objetos, alguno de los ejemplos pueden ser yo_uso_snake_case, otras PersonasUsanCamelCase, otras.usan.puntos.

- Class: cmd_question
  Output: Asigna el valor 25 al objeto mi_numero.
  CorrectAnswer: mi_numero <- 25
  AnswerTests: omnitest(correctExpr='mi_numero <- 25')
  Hint: Ejecuta; mi_numero <- 25

- Class: cmd_question
  Output: Ejecuta; mi_numero (Veras que se le asigno el valor 25)
  CorrectAnswer: mi_numero
  AnswerTests: omnitest(correctExpr='mi_numero')
  Hint: Ejecuta; mi_numero

- Class: text
  Output: Recuerda que en R es de vital importancia que seas preciso, la forma en como escribes si con mayuscula o minuscula importa, no es lo mismo Mi_numero, mi_Numero MInumero o mi_numero, por lo que debes estar siempre atento a como escribes las expresiones en todo momento para no toparte con errores.

- Class: text
  Output: R tiene una larga lista de funciones pre-fabricadas, que pueden ser llamadas con la siguiente nomenclatura":" nombre_funcion(arg1 = val1, arg2 = val2, ...)

- Class: cmd_question
  Output: Puedes usar la función seq(x, y) para establecer la secuencia de un número x a un número y de manera ordenada, intentalo numerando del 1 al 10
  CorrectAnswer: seq(1, 10)
  AnswerTests: omnitest(correctExpr='seq(1, 10)')
  Hint: Ejecuta; seq(1,10)

- Class: cmd_question
  Output: También puedes asignar el resultado de operaciones o salidas de funciones en objetos; añade la siguiente operación al objeto y seq(1, 10, length.out = 5)
  CorrectAnswer: y <- seq(1, 10, length.out = 5)
  AnswerTests: omnitest(correctExpr='y <- seq(1, 10, length.out = 5)')
  Hint: Ejecuta; y <- seq(1, 10, length.out = 5)

- Class: cmd_question
  Output: Y bien, ¿Ahora como puedo saber el valor de la operación que realize? Te puedes llevar una sorpresa al ver que no es solo un valor, y que corresponde con una serie de reglas que definiste en la operación; consulta el objeto y
  CorrectAnswer: y
  AnswerTests: omnitest(correctExpr='y')
  Hint: Ejecuta; y 

- Class: text
  Output: Una vez asignado valores a las variables puedes realizar aplicar funciones a las variables. 
  
- Class: cmd_question
  Output: Sumemos los valores de la variable y. Ejecuta; sum(y)
  CorrectAnswer: sum(y)
  AnswerTests: omnitest(correctExpr='sum(y)')
  Hint: Ejecuta; sum(y)


- Class: cmd_question
  Output: Ahora definamos un nuevo vector x <- seq(1, 5, length.out = 5)
  CorrectAnswer: x <- seq(1, 5, length.out = 5)
  AnswerTests: omnitest(correctExpr='x <- seq(1, 5, length.out = 5)')
  Hint: Ejecuta; x <- seq(1, 5, length.out = 5)

- Class: cmd_question
  Output: Multiplicaremos los valores de ambos vectores x y y. Ejecuta; x * y
  CorrectAnswer: x * y
  AnswerTests: omnitest(correctExpr='x * y')
  Hint: Ejecuta; x * y

- Class: cmd_question
  Output: Recuerda que R es un lenguaje estadistico, tiene un amplio numero de funciones que facilitan el analisis de los datos. Ejecuta; summary(x)
  CorrectAnswer: summary(y)
  AnswerTests: omnitest(correctExpr='summary(y)')
  Hint: Ejecuta; summary(y)
