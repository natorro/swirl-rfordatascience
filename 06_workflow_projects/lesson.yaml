- Class: meta
  Course: swirl-rfordatascience
  Lesson: 06_workflow_projects
  Author: your name goes here
  Type: Standard
  Organization: your organization's name goes here
  Version: 2.4.3

- Class: text
  Output: Para evaluar si es necesario comenzar a usar un proyecto de R se deben tener en cuenta estas 2 preguntas":"

- Class: text
  Output: ¿Qué partes de tu análisis es real? Por ejemplo, ¿que guardarías como el último registro de lo que sucedio durante tu análisis?

- Class: text
  Output: ¿Dónde queda guardado tu análisis? ¿Es un conjunto de análisis?

- Class: text
  Output: Debes de considerar como reales a tus scripts de R y tus archivos de datos, ya que con ellos puedes recrear el ambiente de desarrollo en el que te encontrabas trabajando. Esta consideración se decidió debido a que si haces lo inverso, recuperar tu código del ambiente de R, es mucho más complicado.

- Class: text
  Output: Es una buena práctica indicar a Rstudio que no preserve tu ambiente de trabajo (workspace) entre sesiones, forzandote a capturar todas las interacciones importantes en archivos de código, documentando asi todos los pasos que des en tu análisis de datos.

- Class: text
  Output: Para lograr esto de manera eficiente, es recomdable que aprendas a usar los atajos con el teclado que te permiten asegurarte de haber capturado las partes importantes de tu código en el editor:

- Class: text
  Output: Presionando Cmd/Ctrl_Shift-F10 puedes reiniciar Rstudio. Pero espera, no lo ejecutes ahora, termina la lección y despues juegas con estos comandos.

- Class: text
  Output: Presionando Cmd/Ctrl-Shift-S puedes volver a correr el archivo de código R (script) en el que te encontrabas trabajando.

- Class: cmd_question
  Output: Con el comando getwd() puedes obtener el directorio en el que te encuentras trabajando actualmente, adelante, intentalo, ejecuta getwd()
  CorrectAnswer: getwd()
  AnswerTests: omnitest(correctExpr='getwd()')
  Hint: Solo escribe getwd()
  
- Class: text
  Output: Ahora bien, debes estar conciente del directorio en el que trabajas, ya que en el es donde se guardan todos los archivos que creas cuando trabajas con Rstudio. Es importante que tengas en cuenta esto para poder asignar un espacio de trabajo a tu proyecto. No es para nada recomendable usar el comando setwd() para inicializar un directorio de trabajo, ya que no tenemos el control de nuestro espacio de trabajo.

- Class: text
  Output: Rstudio añade la funcionalidad de crear proyectos en 3 categorías():) Nuevo directorio, Directorio existente y Control de versiones.

- Class: text
  Output: Nuevo directorio(:) Permite crear un espacio de trabajo completamente nuevo, puedes seleccionar el directorio de tu computadora donde deseas guardar los cambios, tu historial de comandos usados, scripts y entorno de trabajo. Ideal para cuando se esta iniciando un trabajo desde cero. Tambies es bueno para establecer si se esta iniciando un proyecto de análisis de datos o el desarrollo de una aplicación web con Shiny.

- Class: text
  Output: Directorio existente(:) En caso de que ya tengas un folder con scripts de R y otros archivos, y quieras agruparlos para mantener un control este debe ser la opción que uses. 

- Class: text
  Output: Control de versiones(:) Esta opción es para aquellos proyectos que estes manejando junto con un controlador de versiones como Git desde el cual puedes clonarlo del repositorio en el que se encuentre. También existe la posibilidad de usar un repositorio de Subversion. Esta es la configuración recomendada para inicializar tu proyecto, ya que Rstudio tiene una interfaz de control de versiones integrado para que puedas trabajar de manera mas practica y eficiente, con la condición de guardar tus cambios cada vez que una nueva funcionalidad o cambio importante se implemente dentro de tu proyecto.
