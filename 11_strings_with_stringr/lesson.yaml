- Class: meta
  Course: swirl-rfordatascience
  Lesson: 11_strings_with_stringr
  Author: your name goes here
  Type: Standard
  Organization: your organization's name goes here
  Version: 2.4.3

- Class: text
  Output: Strings con "stringr"

- Class: text
  Output: Durante este capítulo te introduciremos al manejo de strings con R.


- Class: text
  Output: Veremos lo básico de los strings y como crearlos pero nos enfocaremos en las expresiones regulares.


- Class: text
  Output: Estas expresiones son útiles porque por lo general los strings son datos no estructurados o semi estructurados y las expresiones regulares sirven para describir sus patrones.

- Class: text
  Output: Para este capítulo deberas tener instaladas las librerías "tidyverse" y "stringr".

- Class: text
  Output: Conceptos básicos 

- Class: text
  Output: Un string se puede crear ya sea  con comillas simples '' o con comillas dobles "" no hay diferencia en el comportamiento. Te recomendamos que utilices comillas dobles salvo el caso en que quieras incluir comillas dentro del string entonces utilizarás comillas simples afuera y dobles adentro.

- Class: cmd_question
  Output: Genera un string introduciendo el siguiente código string <- "hola"
  CorrectAnswer: string <- "hola"
  AnswerTests: omnitest(correctExpr='string <- "hola"')
  Hint: Escribe lo que se te indico.


- Class: text
  Output: Un ejemplo de comillas dentro de un string sería el siguiente string2 <-'Esto es "Esparta"'

- Class: text
  Output: Sí algunas ves olvidas poner las comillas finales en un string te va mandar error en la consola y se quedará corriendo hasta que lo detengas, esto puedes hacerlo presionando la tecla de esc.

- Class: text
  Output: Si quieres incluir literalmente alguna comilla o algún símbolo puedes utilizar una diagonal invertida "\" para que se ignore el símbolo.

- Class: text
  Output: Al utlilizar la diagonal invertida "\" muchos caracteres adqueiren otra función por ejemplo la \n indica un cambio de línea, \t indica una tabulación otro ejemplo importante es "/u00b5" que sirve para escribir caracteres que nos pertenecen al inglés que funcionan en cualquier plataforma.

- Class: cmd_question
  Output: Se pueden guardar strings dentro de un vector, genera uno escribiendo el siguiente código c("a", "b", "c").
  CorrectAnswer: c("a", "b", "c")
  AnswerTests: omnitest(correctExpr='c("a", "b", "c")')
  Hint: Escribe c("a", "b", "c").
